Resolving Maven dependencies
	Downloading dependencies into /Users/wso2/Documents/graalvm-comparison/conference-service/ballerina/.scripts/../../ballerina/target/platform-libs
persist.sql-native-1.2.0.jar  14% [==>         ]  2/14 KB (0:00:00 / 0:00:00) persist.sql-native-1.2.0.jar 100% [============] 14/14 KB (0:00:00 / 0:00:00) 

Compiling source
	tharmigan/conference_service_ballerina:0.1.0

========================================================================================================================
GraalVM Native Image: Generating 'conference_service_ballerina' (executable)...
========================================================================================================================
For detailed information and explanations on the build output, visit:
https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/BuildOutput.md
------------------------------------------------------------------------------------------------------------------------
[1/8] Initializing...                                                                                    (7.1s @ 0.29GB)
 Java version: 17.0.8+7, vendor version: GraalVM CE 17.0.8+7.1
 Graal compiler: optimization level: 2, target machine: armv8-a
 C compiler: cc (apple, arm64, 14.0.3)
 Garbage collector: Serial GC (max heap size: 80% of RAM)
 2 user-specific feature(s)
 - com.oracle.svm.thirdparty.gson.GsonFeature
 - io.ballerina.stdlib.crypto.svm.BouncyCastleFeature
[2/8] Performing analysis...  [*******]                                                                 (44.3s @ 2.21GB)
  24,350 (92.54%) of 26,313 types reachable
  75,225 (79.31%) of 94,853 fields reachable
 116,178 (68.06%) of 170,693 methods reachable
   5,603 types,   159 fields, and 4,392 methods registered for reflection
      86 types,    78 fields, and    65 methods registered for JNI access
       5 native libraries: -framework CoreServices, -framework Foundation, dl, pthread, z
[3/8] Building universe...                                                                               (5.1s @ 2.78GB)
[4/8] Parsing methods...      [***]                                                                      (5.9s @ 1.70GB)
[5/8] Inlining methods...     [***]                                                                      (2.5s @ 1.47GB)
[6/8] Compiling methods...    [******]                                                                  (41.1s @ 2.09GB)
[7/8] Layouting methods...    [***]                                                                      (6.3s @ 3.04GB)
[8/8] Creating image...       [***]                                                                     (10.8s @ 2.73GB)
  82.33MB (56.69%) for code area:    78,447 compilation units
  61.34MB (42.24%) for image heap:  504,148 objects and 39 resources
   1.56MB ( 1.08%) for other data
 145.24MB in total
------------------------------------------------------------------------------------------------------------------------
Top 10 origins of code area:                                Top 10 object types in image heap:
  58.90MB conference_service_ballerina.jar                    15.79MB byte[] for code metadata
  12.20MB java.base                                           13.29MB byte[] for embedded resources
   3.03MB java.xml                                             6.02MB java.lang.Class
   1.40MB java.desktop                                         4.95MB java.lang.String
   1.33MB svm.jar (Native Image)                               4.69MB byte[] for java.lang.String
   1.21MB java.net.http                                        3.93MB byte[] for general heap data
 610.61kB java.naming                                          2.04MB com.oracle.svm.core.hub.DynamicHubCompanion
 550.25kB java.security.jgss                                   1.26MB byte[] for reflection metadata
 511.74kB java.management                                      1.04MB java.lang.String[]
 458.43kB java.rmi                                           899.96kB c.o.svm.core.hub.DynamicHub$ReflectionMetadata
   1.74MB for 24 more packages                                 6.84MB for 4122 more object types
------------------------------------------------------------------------------------------------------------------------
Recommendations:
 HEAP: Set max heap for improved and more predictable memory usage.
 CPU:  Enable more CPU features with '-march=native' for improved performance.
------------------------------------------------------------------------------------------------------------------------
                       15.6s (12.5% of total time) in 142 GCs | Peak RSS: 4.93GB | CPU load: 5.68
------------------------------------------------------------------------------------------------------------------------
Produced artifacts:
 /Users/wso2/Documents/graalvm-comparison/conference-service/ballerina/target/bin/conference_service_ballerina (executable)
========================================================================================================================
Finished generating 'conference_service_ballerina' in 2m 4s.
